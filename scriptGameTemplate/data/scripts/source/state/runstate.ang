
//
//  FILE NAME:  runstate.ang
//
//  DESC:       Run state
//

final class CRunState : CCommonState
{
    //
    //  Constructor
    //
    CRunState()
    {
        super( NStateDefs::EGS_RUN, NStateDefs::EGS_GAME_LOAD );
    }
    
    //
    //  Destroy the state
    //
    void destroy() override
    {
        // Wait for all rendering to be finished
        Device.waitForIdle();
        
        ObjectDataMgr.freeGroup2D( "(run)" );
        StrategyMgr.deleteStrategy( "(run)" );
        Device.deleteCommandPoolGroup( "(run)" );
        
        /*Device.deleteCommandPoolGroup( "(title)" );
        
        StrategyMgr.deleteStrategy( "(title)" );
        StrategyMgr.deleteStrategy( "(cube)" );
        
        ObjectDataMgr.freeGroup2D( "(title)" );
        ObjectDataMgr.freeGroup3D( "(cube)" );*/
    }

    //
    //  Init the state
    //
    void init() override
    {
        // Unblock the menu messaging and activate needed trees(s)
        MenuMgr.activateTree( "pause_tree" );
        
        //iStrategy @strategy = StrategyMgr.getStrategy( "(stage)" );
        //strategy.setCommandBuffer( "(run)" );
        //strategy.enable();
        
        // Do the fade in
        Spawn("State_FadeIn", "(state)");
        
        /*iStrategy @strategy = StrategyMgr.getStrategy( "(title)" );
        strategy.setCommandBuffer( "(title)" );
        strategy.enable();
        
        @strategy = StrategyMgr.getStrategy( "(cube)" );
        strategy.setCommandBuffer( "(title)" );
        strategy.enable();
        
        // Do the fade in
        Spawn("State_FadeIn", "(state)");*/
    }
    
    //
    //  Handle events
    //
    void handleEvent() override
    {
        CCommonState::handleEvent();
        
        // Check for the "game change state" message
        if( ActionMgr.wasEvent( NMenuDefs::EME_MENU_GAME_STATE_CHANGE, NMenuDefs::ETC_BEGIN ) )
            Spawn("State_FadeOut", "(state)");
        
        else if( ActionMgr.wasEvent( NStateDefs::ESE_FADE_IN_COMPLETE ) )
            MenuMgr.allow();
        
        else if( ActionMgr.wasEvent( NStateDefs::ESE_FADE_OUT_COMPLETE ) )
        {
            // Clear out all the trees
            MenuMgr.clearActiveTrees();

            // Set the flag to change the state
            mChangeState = true;
        }
    }
};

//
//  Functions for loading the assets for this state
//
void LoadRunAssets()
{
    ObjectDataMgr.loadGroup2D( "(run)" );
    
    // Create the needed strategies
    //iStrategy @titleStrategy = StrategyMgr.createBasicStageStrategy( "(stage)" );
    
    /*ObjectDataMgr.loadGroup2D( "(title)" );
    ObjectDataMgr.loadGroup3D( "(cube)" );
    
    // Create the needed strategies
    iStrategy @titleStrategy = StrategyMgr.createActorStrategy( "(title)" );
    iStrategy @cubeStrategy = StrategyMgr.createActorStrategy( "(cube)" );
    
    // Add the actors
    titleStrategy.create( "background" );
    cubeStrategy.create( "cube" ).getSprite().prepare( "rotate" );
    
    // Set the camera for the cube strategy
    StrategyMgr.setCamera( "(cube)", "cube" );*/
    
    // Send a message to indicate the load is done
    DispatchEvent( NStateDefs::ESE_THREAD_LOAD_COMPLETE );
}
    