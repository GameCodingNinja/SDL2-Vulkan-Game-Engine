
//
//  FILE NAME:  titlescreenstate.ang
//
//  DESC:       Title screen state
//

final class CTitleScreenState : CCommonState
{
    //
    //  Constructor
    //
    CTitleScreenState()
    {
        super( NStateDefs::EGS_TITLE_SCREEN, NStateDefs::EGS_GAME_LOAD );

        // Activate the needed tree(s)
        MenuMgr.activateTree( "title_screen_tree" );
    }

    //
    //  Init the state
    //
    void init() override
    {
        iStrategy @strategy = StrategyMgr.getStrategy( "(title)" );
        strategy.setCommandBuffer( "(title)" );
        strategy.enable();
        
        @strategy = StrategyMgr.getStrategy( "(cube)" );
        strategy.setCommandBuffer( "(title)" );
        strategy.enable();
        
        // Do the fade in
        Spawn("State_FadeIn", "(state)");
    }
    
    //
    //  Destroy the state
    //
    void destroy() override
    {
        // Wait for all rendering to be finished
        Device.waitForIdle();
        
        StrategyMgr.deleteStrategy( "(title)" );
        StrategyMgr.deleteStrategy( "(cube)" );
        
        ObjectDataMgr.freeGroup2D( "(title)" );
        ObjectDataMgr.freeGroup3D( "(cube)" );
    }
    
    //
    //  Handle events
    //
    void handleEvent() override
    {
        CCommonState::handleEvent();
        
        if( ActionMgr.wasEvent( NStateDefs::ESE_FADE_IN_COMPLETE ) )
            MenuMgr.allow();
    }
};

//
//  Functions for loading/unloading the assets for this state
//
void LoadTitleScreenAssets()
{
    ObjectDataMgr.loadGroup2D( "(title)" );
    ObjectDataMgr.loadGroup3D( "(cube)" );
    
    // Create the needed strategies
    iStrategy @titleStrategy = StrategyMgr.createActorStrategy( "(title)" );
    iStrategy @cubeStrategy = StrategyMgr.createActorStrategy( "(cube)" );
    
    // Add the actors
    titleStrategy.create( "background" );
    cubeStrategy.create( "cube" ).getSprite().prepare( "rotate" );
    
    // Set the camera for the cube strategy
    StrategyMgr.setCamera( "(cube)", "cube" );
}
    